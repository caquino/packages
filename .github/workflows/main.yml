name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
        - terraform

    steps:

    - name: Install dependencies
      run: |
        sudo apt-get -y update
        sudo apt-get -y install build-essential ruby ruby-dev bundler

    - name: Install fpm-cookery
      run: |
        sudo gem install fpm-cookery

    - name: Checkout
      uses: actions/checkout@v1

    - name: Build package
      if: build_package
      run: |
        cd packages/${{ matrix.package }}/dynamic
        fpm-cook clean
        fpm-cook
        PACKAGE_VERSION=$(find packages/${{ matrix.package }}/dynamic/pkg -type f -name "*.deb" | awk -F_ '{print $2}')
        PACKAGE_FILE=$(find packages/${{ matrix.package }}/dynamic/pkg -type f -name "*.deb")
        echo "::set-output name=version::${PACKAGE_VERSION}"
        echo "::set-output name=package-file::${PACKAGE_FILE}"

    - name: Create release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.reg }}
        draft: false
        prerelease: false

    - name: Check result
      run: |
        ls -Ral

    - name: Upload release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: packages/${{ matrix.package }}/dynamic/pkg/${{ steps.build_package.outputs.package-file }}
        asset_name: ${{ steps.build_package.outpus.package-file }}
        asset_content_type: application/x-debian-package
